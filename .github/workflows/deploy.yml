name: Build a Small-scale CMS App

on:
  push:
    paths:
      - "react-ui/**"
      - "cms/**"
      - docker-compose.yml
      - .github/workflows/deploy.yml
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      REACT_IMAGE: ghcr.io/anwar3006/react-ui:latest
      JAVA_IMAGE: ghcr.io/anwar3006/java-cms:latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set-up JDK
      - name: Set-up JDK-21
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      # Use maven to build Java App
      - name: Build Java App
        run: mvn -f cms/pom.xml clean package -DskipTests

      # Step 2: Login into Github Container Registry
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Detect changes and build only modified images
      - name: Determine changed files
        id: changes
        uses: dorny/paths-filter@v2
        with:
          filters: |
            react-ui:
              - 'react-ui/**'
            java-cms:
              - 'cms/**'

      # Build and Push React Image
      - name: Build React Image
        if: steps.changes.outputs.react-ui == 'true'
        run: |
          docker build -t $REACT_IMAGE ./react-ui
          docker push $REACT_IMAGE

      # Build and Push Java Image
      - name: Build Java Image
        if: steps.changes.outputs.java-cms == 'true'
        run: |
          docker build -t $JAVA_IMAGE ./cms
          docker push $JAVA_IMAGE

      # Deply updated service to server(run this if you have a production server)
    #   - name: SSH to Server and Deploy
    #     uses: appleboy/ssh-action@v1.2.0
    #     with:
    #       host: ${{ secrets.SSH_HOST }}
    #       username: ${{ secrets.SSH_USERNAME }}
    #       key: ${{ secrets.SSH_KEY }}
    #       script: |
    #         docker-compose down
    #         docker-compose up -d
